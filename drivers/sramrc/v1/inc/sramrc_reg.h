/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein
 * is confidential and proprietary to MediaTek Inc. and/or its licensors.
 * Without the prior written permission of MediaTek inc. and/or its licensors,
 * any reproduction, modification, use or disclosure of MediaTek Software,
 * and information contained herein, in whole or in part, shall be strictly prohibited.
 */
/* MediaTek Inc. (C) 2021. All rights reserved.
 *
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
 * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
 * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
 * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
 * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
 * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
 * THAT IT IS RECEIVER\'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
 * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
 * SOFTWARE RELEASES MADE TO RECEIVER\'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER\'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK\'S ENTIRE AND
 * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
 * AT MEDIATEK\'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
 * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
 * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 * The following software/firmware and/or related documentation ("MediaTek Software")
 * have been modified by MediaTek Inc. All revisions are subject to any receiver\'s
 * applicable license agreements with MediaTek Inc.
 */

#ifndef __SRAMRC_REG__
#define __SRAMRC_REG__


#define SRAMRC_APB_BASE (0x1C01F000)

#define SRAMRC_BASIC_SET	(SRAMRC_APB_BASE+0x0)
#define SRAMRC_SRAM_SW_REQ1	(SRAMRC_APB_BASE+0x4)
#define SRAMRC_SRAM_SW_REQ2	(SRAMRC_APB_BASE+0x8)
#define SRAMRC_SRAM_SW_REQ3	(SRAMRC_APB_BASE+0xC)
#define SRAMRC_SRAM_SW_REQ4	(SRAMRC_APB_BASE+0x10)
#define SRAMRC_VGPU_SET		(SRAMRC_APB_BASE+0x14)
#define SRAMRC_VISP_SET		(SRAMRC_APB_BASE+0x18)
#define SRAMRC_VCORE_SET	(SRAMRC_APB_BASE+0x1C)
#define SRAMRC_FORCE_SET	(SRAMRC_APB_BASE+0x20)
#define SRAMRC_FORCE_CUR	(SRAMRC_APB_BASE+0x24)
#define SRAMRC_FORCE_TAR	(SRAMRC_APB_BASE+0x28)
#define SRAMRC_VSRAM_STA	(SRAMRC_APB_BASE+0x2C)
#define SRAMRC_VGPU_STA		(SRAMRC_APB_BASE+0x30)
#define SRAMRC_VISP_STA		(SRAMRC_APB_BASE+0x34)
#define SRAMRC_VCORE_STA	(SRAMRC_APB_BASE+0x38)
#define SRAMRC_MUMTAS_STA	(SRAMRC_APB_BASE+0x3C)
#define SRAMRC_MUMTAS_SET	(SRAMRC_APB_BASE+0x40)
#define SRAMRC_MUMTAS_CLR	(SRAMRC_APB_BASE+0x44)
#define SRAMRC_VSRAM_MASK	(SRAMRC_APB_BASE+0x48)
#define SRAMRC_VGPU_MASK	(SRAMRC_APB_BASE+0x4C)
#define SRAMRC_VISP_MASK	(SRAMRC_APB_BASE+0x50)
#define SRAMRC_VCORE_MASK	(SRAMRC_APB_BASE+0x54)
#define SRAMRC_VGPU_RETRY	(SRAMRC_APB_BASE+0x5C)
#define SRAMRC_VISP_RETRY	(SRAMRC_APB_BASE+0x60)
#define SRAMRC_VCORE_RETRY	(SRAMRC_APB_BASE+0x64)
#define SRAMRC_TIMEOUT_1	(SRAMRC_APB_BASE+0x68)
#define SRAMRC_TIMEOUT_2	(SRAMRC_APB_BASE+0x6C)
#define SRAMRC_TIMEOUT_STA	(SRAMRC_APB_BASE+0x70)
#define SRAMRC_IRQ_SET		(SRAMRC_APB_BASE+0x74)

#define BASIC_SET_RGU_HALT_DISABLE_ADDR		(SRAMRC_BASIC_SET)
#define BASIC_SET_RGU_HALT_DISABLE_MASK		(0x1)
#define BASIC_SET_RGU_HALT_DISABLE_SHIFT	(2)
#define BASIC_SET_RGU_HALT_INV_ADDR		(SRAMRC_BASIC_SET)
#define BASIC_SET_RGU_HALT_INV_MASK		(0x1)
#define BASIC_SET_RGU_HALT_INV_SHIFT		(3)
#define BASIC_SET_SRAMRC_EN_ADDR		(SRAMRC_BASIC_SET)
#define BASIC_SET_SRAMRC_EN_MASK		(0x1)
#define BASIC_SET_SRAMRC_EN_SHIFT		(0)
#define BASIC_SET_SRAMRC_OUT_EN_ADDR		(SRAMRC_BASIC_SET)
#define BASIC_SET_SRAMRC_OUT_EN_MASK		(0x1)
#define BASIC_SET_SRAMRC_OUT_EN_SHIFT		(1)
#define FORCE_CUR_CUR_FORCE_VCORE_ADDR		(SRAMRC_FORCE_CUR)
#define FORCE_CUR_CUR_FORCE_VCORE_MASK		(0xFF)
#define FORCE_CUR_CUR_FORCE_VCORE_SHIFT		(24)
#define FORCE_CUR_CUR_FORCE_VGPU_ADDR		(SRAMRC_FORCE_CUR)
#define FORCE_CUR_CUR_FORCE_VGPU_MASK		(0xFF)
#define FORCE_CUR_CUR_FORCE_VGPU_SHIFT		(8)
#define FORCE_CUR_CUR_FORCE_VISP_ADDR		(SRAMRC_FORCE_CUR)
#define FORCE_CUR_CUR_FORCE_VISP_MASK		(0xFF)
#define FORCE_CUR_CUR_FORCE_VISP_SHIFT		(16)
#define FORCE_CUR_CUR_FORCE_VSRAM_ADDR		(SRAMRC_FORCE_CUR)
#define FORCE_CUR_CUR_FORCE_VSRAM_MASK		(0xFF)
#define FORCE_CUR_CUR_FORCE_VSRAM_SHIFT		(0)
#define FORCE_SET_FORCE_EN_CUR_VCORE_ADDR	(SRAMRC_FORCE_SET)
#define FORCE_SET_FORCE_EN_CUR_VCORE_MASK	(0x1)
#define FORCE_SET_FORCE_EN_CUR_VCORE_SHIFT	(3)
#define FORCE_SET_FORCE_EN_CUR_VGPU_ADDR	(SRAMRC_FORCE_SET)
#define FORCE_SET_FORCE_EN_CUR_VGPU_MASK	(0x1)
#define FORCE_SET_FORCE_EN_CUR_VGPU_SHIFT	(1)
#define FORCE_SET_FORCE_EN_CUR_VISP_ADDR	(SRAMRC_FORCE_SET)
#define FORCE_SET_FORCE_EN_CUR_VISP_MASK	(0x1)
#define FORCE_SET_FORCE_EN_CUR_VISP_SHIFT	(2)
#define FORCE_SET_FORCE_EN_CUR_VSRAM_ADDR	(SRAMRC_FORCE_SET)
#define FORCE_SET_FORCE_EN_CUR_VSRAM_MASK	(0x1)
#define FORCE_SET_FORCE_EN_CUR_VSRAM_SHIFT	(0)
#define FORCE_SET_FORCE_EN_TAR_ADDR		(SRAMRC_FORCE_SET)
#define FORCE_SET_FORCE_EN_TAR_MASK		(0x1)
#define FORCE_SET_FORCE_EN_TAR_SHIFT		(4)
#define FORCE_TAR_TAR_FORCE_ADDR		(SRAMRC_FORCE_TAR)
#define FORCE_TAR_TAR_FORCE_MASK		(0xFF)
#define FORCE_TAR_TAR_FORCE_SHIFT		(0)
#define IRQ_SET_CLR_IRQ_ADDR			(SRAMRC_IRQ_SET)
#define IRQ_SET_CLR_IRQ_MASK			(0x1)
#define IRQ_SET_CLR_IRQ_SHIFT			(1)
#define IRQ_SET_EN_IRQ_ADDR			(SRAMRC_IRQ_SET)
#define IRQ_SET_EN_IRQ_MASK			(0x1)
#define IRQ_SET_EN_IRQ_SHIFT			(0)
#define MUMTAS_CLR_MUMTAS_STATUS_ADDR		(SRAMRC_MUMTAS_CLR)
#define MUMTAS_CLR_MUMTAS_STATUS_MASK		(0xFFFFFFFF)
#define MUMTAS_CLR_MUMTAS_STATUS_SHIFT		(0)
#define MUMTAS_SET_MUMTAS_STATUS_ADDR		(SRAMRC_MUMTAS_SET)
#define MUMTAS_SET_MUMTAS_STATUS_MASK		(0xFFFFFFFF)
#define MUMTAS_SET_MUMTAS_STATUS_SHIFT		(0)
#define MUMTAS_STA_MUMTAS_STATUS_ADDR		(SRAMRC_MUMTAS_STA)
#define MUMTAS_STA_MUMTAS_STATUS_MASK		(0xFFFFFFFF)
#define MUMTAS_STA_MUMTAS_STATUS_SHIFT		(0)
#define SRAM_SW_REQ1_VSRAM_SW_1_ADDR		(SRAMRC_SRAM_SW_REQ1)
#define SRAM_SW_REQ1_VSRAM_SW_1_MASK		(0xFF)
#define SRAM_SW_REQ1_VSRAM_SW_1_SHIFT		(0)
#define SRAM_SW_REQ2_VSRAM_SW_2_ADDR		(SRAMRC_SRAM_SW_REQ2)
#define SRAM_SW_REQ2_VSRAM_SW_2_MASK		(0xFF)
#define SRAM_SW_REQ2_VSRAM_SW_2_SHIFT		(0)
#define SRAM_SW_REQ3_VSRAM_SW_3_ADDR		(SRAMRC_SRAM_SW_REQ3)
#define SRAM_SW_REQ3_VSRAM_SW_3_MASK		(0xFF)
#define SRAM_SW_REQ3_VSRAM_SW_3_SHIFT		(0)
#define SRAM_SW_REQ4_VSRAM_SW_4_ADDR		(SRAMRC_SRAM_SW_REQ4)
#define SRAM_SW_REQ4_VSRAM_SW_4_MASK		(0xFF)
#define SRAM_SW_REQ4_VSRAM_SW_4_SHIFT		(0)
#define TIMEOUT_1_RG_REQ_TIMEOUT_ADDR		(SRAMRC_TIMEOUT_1)
#define TIMEOUT_1_RG_REQ_TIMEOUT_MASK		(0xFFFF)
#define TIMEOUT_1_RG_REQ_TIMEOUT_SHIFT		(0)
#define TIMEOUT_1_RG_VGPU_REQ_TIMEOUT_ADDR	(SRAMRC_TIMEOUT_1)
#define TIMEOUT_1_RG_VGPU_REQ_TIMEOUT_MASK	(0xFFFF)
#define TIMEOUT_1_RG_VGPU_REQ_TIMEOUT_SHIFT	(16)
#define TIMEOUT_2_RG_VISP_REQ_TIMEOUT_ADDR	(SRAMRC_TIMEOUT_2)
#define TIMEOUT_2_RG_VISP_REQ_TIMEOUT_MASK	(0xFFFF)
#define TIMEOUT_2_RG_VISP_REQ_TIMEOUT_SHIFT	(0)
#define TIMEOUT_2_RG_VCORE_REQ_TIMEOUT_ADDR	(SRAMRC_TIMEOUT_2)
#define TIMEOUT_2_RG_VCORE_REQ_TIMEOUT_MASK	(0xFFFF)
#define TIMEOUT_2_RG_VCORE_REQ_TIMEOUT_SHIFT	(16)
#define TIMEOUT_STA_TO_ADDR			(SRAMRC_TIMEOUT_STA)
#define TIMEOUT_STA_TO_MASK			(0x1)
#define TIMEOUT_STA_TO_SHIFT			(0)
#define TIMEOUT_STA_VCORE_TO_ADDR		(SRAMRC_TIMEOUT_STA)
#define TIMEOUT_STA_VCORE_TO_MASK		(0x1)
#define TIMEOUT_STA_VCORE_TO_SHIFT		(3)
#define TIMEOUT_STA_VGPU_TO_ADDR		(SRAMRC_TIMEOUT_STA)
#define TIMEOUT_STA_VGPU_TO_MASK		(0x1)
#define TIMEOUT_STA_VGPU_TO_SHIFT		(1)
#define TIMEOUT_STA_VISP_TO_ADDR		(SRAMRC_TIMEOUT_STA)
#define TIMEOUT_STA_VISP_TO_MASK		(0x1)
#define TIMEOUT_STA_VISP_TO_SHIFT		(2)
#define VCORE_MASK_VCORE_DONE_MASK_ADDR		(SRAMRC_VCORE_MASK)
#define VCORE_MASK_VCORE_DONE_MASK_MASK		(0x1)
#define VCORE_MASK_VCORE_DONE_MASK_SHIFT	(1)
#define VCORE_MASK_VCORE_REQ_MASK_ADDR		(SRAMRC_VCORE_MASK)
#define VCORE_MASK_VCORE_REQ_MASK_MASK		(0x1)
#define VCORE_MASK_VCORE_REQ_MASK_SHIFT		(0)
#define VCORE_RETRY_VCORE_RETRY_ADDR		(SRAMRC_VCORE_RETRY)
#define VCORE_RETRY_VCORE_RETRY_MASK		(0x1)
#define VCORE_RETRY_VCORE_RETRY_SHIFT		(0)
#define VCORE_SET_LV0_VCORE_ADDR		(SRAMRC_VCORE_SET)
#define VCORE_SET_LV0_VCORE_MASK		(0xFF)
#define VCORE_SET_LV0_VCORE_SHIFT		(0)
#define VCORE_SET_LV1_VCORE_ADDR		(SRAMRC_VCORE_SET)
#define VCORE_SET_LV1_VCORE_MASK		(0xFF)
#define VCORE_SET_LV1_VCORE_SHIFT		(8)
#define VCORE_SET_LV1_VCORE_THRES_ADDR		(SRAMRC_VCORE_SET)
#define VCORE_SET_LV1_VCORE_THRES_MASK		(0xFF)
#define VCORE_SET_LV1_VCORE_THRES_SHIFT		(16)
#define VCORE_STA_CUR_VCORE_ADDR		(SRAMRC_VCORE_STA)
#define VCORE_STA_CUR_VCORE_MASK		(0xFF)
#define VCORE_STA_CUR_VCORE_SHIFT		(16)
#define VCORE_STA_TAR_VCORE_REQ_ADDR		(SRAMRC_VCORE_STA)
#define VCORE_STA_TAR_VCORE_REQ_MASK		(0xFF)
#define VCORE_STA_TAR_VCORE_REQ_SHIFT		(0)
#define VGPU_MASK_VGPU_DONE_MASK_ADDR		(SRAMRC_VGPU_MASK)
#define VGPU_MASK_VGPU_DONE_MASK_MASK		(0x1)
#define VGPU_MASK_VGPU_DONE_MASK_SHIFT		(1)
#define VGPU_MASK_VGPU_REQ_MASK_ADDR		(SRAMRC_VGPU_MASK)
#define VGPU_MASK_VGPU_REQ_MASK_MASK		(0x1)
#define VGPU_MASK_VGPU_REQ_MASK_SHIFT		(0)
#define VGPU_RETRY_VGPU_RETRY_ADDR		(SRAMRC_VGPU_RETRY)
#define VGPU_RETRY_VGPU_RETRY_MASK		(0x1)
#define VGPU_RETRY_VGPU_RETRY_SHIFT		(0)
#define VGPU_SET_LV0_VGPU_ADDR			(SRAMRC_VGPU_SET)
#define VGPU_SET_LV0_VGPU_MASK			(0xFF)
#define VGPU_SET_LV0_VGPU_SHIFT			(0)
#define VGPU_SET_LV1_VGPU_ADDR			(SRAMRC_VGPU_SET)
#define VGPU_SET_LV1_VGPU_MASK			(0xFF)
#define VGPU_SET_LV1_VGPU_SHIFT			(8)
#define VGPU_SET_LV1_VGPU_THRES_ADDR		(SRAMRC_VGPU_SET)
#define VGPU_SET_LV1_VGPU_THRES_MASK		(0xFF)
#define VGPU_SET_LV1_VGPU_THRES_SHIFT		(16)
#define VGPU_STA_CUR_VGPU_ADDR			(SRAMRC_VGPU_STA)
#define VGPU_STA_CUR_VGPU_MASK			(0xFF)
#define VGPU_STA_CUR_VGPU_SHIFT			(16)
#define VGPU_STA_TAR_VGPU_REQ_ADDR		(SRAMRC_VGPU_STA)
#define VGPU_STA_TAR_VGPU_REQ_MASK		(0xFF)
#define VGPU_STA_TAR_VGPU_REQ_SHIFT		(0)
#define VISP_MASK_VISP_DONE_MASK_ADDR		(SRAMRC_VISP_MASK)
#define VISP_MASK_VISP_DONE_MASK_MASK		(0x1)
#define VISP_MASK_VISP_DONE_MASK_SHIFT		(1)
#define VISP_MASK_VISP_REQ_MASK_ADDR		(SRAMRC_VISP_MASK)
#define VISP_MASK_VISP_REQ_MASK_MASK		(0x1)
#define VISP_MASK_VISP_REQ_MASK_SHIFT		(0)
#define VISP_RETRY_VISP_RETRY_ADDR		(SRAMRC_VISP_RETRY)
#define VISP_RETRY_VISP_RETRY_MASK		(0x1)
#define VISP_RETRY_VISP_RETRY_SHIFT		(0)
#define VISP_SET_LV0_VISP_ADDR			(SRAMRC_VISP_SET)
#define VISP_SET_LV0_VISP_MASK			(0xFF)
#define VISP_SET_LV0_VISP_SHIFT			(0)
#define VISP_SET_LV1_VISP_ADDR			(SRAMRC_VISP_SET)
#define VISP_SET_LV1_VISP_MASK			(0xFF)
#define VISP_SET_LV1_VISP_SHIFT			(8)
#define VISP_SET_LV1_VISP_THRES_ADDR		(SRAMRC_VISP_SET)
#define VISP_SET_LV1_VISP_THRES_MASK		(0xFF)
#define VISP_SET_LV1_VISP_THRES_SHIFT		(16)
#define VISP_STA_CUR_VISP_ADDR			(SRAMRC_VISP_STA)
#define VISP_STA_CUR_VISP_MASK			(0xFF)
#define VISP_STA_CUR_VISP_SHIFT			(16)
#define VISP_STA_TAR_VISP_REQ_ADDR		(SRAMRC_VISP_STA)
#define VISP_STA_TAR_VISP_REQ_MASK		(0xFF)
#define VISP_STA_TAR_VISP_REQ_SHIFT		(0)
#define VSRAM_MASK_VSRAM_DONE_MASK_ADDR		(SRAMRC_VSRAM_MASK)
#define VSRAM_MASK_VSRAM_DONE_MASK_MASK		(0x1)
#define VSRAM_MASK_VSRAM_DONE_MASK_SHIFT	(1)
#define VSRAM_MASK_VSRAM_REQ_MASK_ADDR		(SRAMRC_VSRAM_MASK)
#define VSRAM_MASK_VSRAM_REQ_MASK_MASK		(0x1)
#define VSRAM_MASK_VSRAM_REQ_MASK_SHIFT		(0)
#define VSRAM_STA_CUR_VSRAM_ADDR		(SRAMRC_VSRAM_STA)
#define VSRAM_STA_CUR_VSRAM_MASK		(0xFF)
#define VSRAM_STA_CUR_VSRAM_SHIFT		(16)
#define VSRAM_STA_TAR_VSRAM_REQ_ADDR		(SRAMRC_VSRAM_STA)
#define VSRAM_STA_TAR_VSRAM_REQ_MASK		(0xFF)
#define VSRAM_STA_TAR_VSRAM_REQ_SHIFT		(0)

#endif /* __SRAMRC_REG__ */
